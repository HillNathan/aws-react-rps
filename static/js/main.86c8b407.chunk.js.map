{"version":3,"sources":["utils/index.js","components/MyButton/index.js","components/PlayerHand/index.js","components/ResultDisplay/index.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","API","playRPS","theThrow","post","CORSAnywhere","myThrow","module","exports","MyButton","props","testID","choice","className","type","test-id","onClick","playLambdaRPS","toUpperCase","PlayerHand","thePlayer","theChoice","ResultDisplay","toDisplay","theResult","App","state","lambda","result","myChoice","setState","then","response","data","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kJAAA,IAAMA,EAAQC,EAAQ,IAQhBC,EAAM,CAERC,QAAU,SAAAC,GAAQ,OAAIJ,EAAMK,KAAKC,6GAAsB,CAACC,QAAUH,MAGtEI,EAAOC,QAAUP,G,2HCMFQ,MAjBf,SAAkBC,GAGd,IAAMC,EAASD,EAAME,OAAS,UAE9B,OACI,qBAAKC,UAAU,QAAf,SACI,wBAAQC,KAAK,SACLC,UAASJ,EACTE,UAAW,gBAAkBF,EAC7BK,QAAS,kBAAMN,EAAMO,cAAcP,EAAME,SAHjD,SAIKF,EAAME,OAAOM,mBCGfC,MAdf,SAAoBT,GAChB,OACI,gCACI,sBAAKG,UAAU,4CAAf,UACKH,EAAMU,UADX,aAGA,qBAAKP,UAAU,0CAAf,SAEA,+BAAOH,EAAMW,UAAUH,sBCYpBI,MApBf,SAAuBZ,GACnB,IAAIa,EAAY,GAEhB,OAAQb,EAAMc,WACV,IAAK,MAASD,EAAY,WACZ,MACd,IAAK,OAASA,EAAY,cACZ,MACd,IAAK,OAASA,EAAY,WACZ,MACd,QAAUA,EAAY,OAG1B,OACI,qBAAKV,UAAU,2CAAf,SACE,+BAAOU,OCTXtB,G,MAAMD,EAAQ,KA4ELyB,E,4MAxEbC,MAAQ,CACNpB,QAAS,GACTqB,OAAQ,GACRC,OAAQ,I,EAIVX,cAAgB,SAACY,GAEf,EAAKC,SAAS,CACZxB,QAAUuB,EACVF,OAAS,GACTC,OAAS,KAIX3B,EAAIC,QAAQ2B,GACXE,MAAK,SAAAC,GAGJ,EAAKF,SAAS,CACZH,OAASK,EAASC,KAAKN,OACvBC,OAASI,EAASC,KAAKL,a,uDAO3B,OACE,sBAAKf,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,oBAAIA,UAAU,YAAd,0CAGF,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAY,YAAjB,UACE,sBAAKA,UAAU,6BAAf,UACE,cAAC,EAAD,CACEI,cAAeiB,KAAKjB,cACpBL,OAAO,SACT,cAAC,EAAD,CACEK,cAAeiB,KAAKjB,cACpBL,OAAO,UACT,cAAC,EAAD,CACEK,cAAeiB,KAAKjB,cACpBL,OAAO,gBAIX,qBAAKC,UAAU,6BAAf,SACE,sBAAKA,UAAU,QAAf,UACA,cAAC,EAAD,CACIO,UAAU,KACVC,UAAWa,KAAKR,MAAMpB,UAE1B,cAAC,EAAD,CACEc,UAAU,SACVC,UAAWa,KAAKR,MAAMC,SAExB,cAAC,EAAD,CACEH,UAAWU,KAAKR,MAAME,0B,GA/DpBO,aCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.86c8b407.chunk.js","sourcesContent":["const axios = require('axios')\r\n\r\nconst myAWS = 'https://0dvqmfkhye.execute-api.us-east-2.amazonaws.com/default/NateRPS'\r\n\r\n// Adding in the CORS-anywhere to remove CORS errors from the react app. \r\nconst CORSAnywhere = 'https://cors-anywhere.herokuapp.com/'\r\n\r\n// isloating my axios function in this module\r\nconst API = {\r\n    // making a call to my own AWS Lambda API to play Rock-Paper-Scissors\r\n    playRPS : theThrow => axios.post(CORSAnywhere + myAWS, {myThrow : theThrow})\r\n}\r\n\r\nmodule.exports = API\r\n\r\n","import React from 'react';\r\n\r\nfunction MyButton(props) {\r\n    // This function returns a bootstrap column containing a button defined by props.choice \r\n\r\n    const testID = props.choice + \"-button\"\r\n\r\n    return(\r\n        <div className=\"col-4\">\r\n            <button type=\"button\" \r\n                    test-id={testID}\r\n                    className={\"btn btn-dark \" + testID}\r\n                    onClick={() => props.playLambdaRPS(props.choice)}>\r\n                {props.choice.toUpperCase()}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyButton\r\n","import React from 'react'\r\n\r\nfunction PlayerHand(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center lambda-header \">\r\n                {props.thePlayer} THROW:\r\n            </div>\r\n            <div className=\"row justify-content-center lambda-throw\">\r\n            {/* This div tag shows the response from the lambda function directly from state */}\r\n            <span>{props.theChoice.toUpperCase()}</span>  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayerHand","import React from 'react'\r\n\r\nfunction ResultDisplay(props) {\r\n    var toDisplay = \"\"\r\n\r\n    switch (props.theResult) {\r\n        case \"win\"  : toDisplay = \"YOU WIN!\"\r\n                      break\r\n        case \"lose\" : toDisplay = \"YOU LOSE!!!\"\r\n                      break\r\n        case \"draw\" : toDisplay = \"DRAW....\"\r\n                      break\r\n        default : toDisplay = \"....\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"row justify-content-center lambda-result\">\r\n          <span>{toDisplay}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultDisplay","import React, { Component } from 'react';\nimport MyButton from './components/MyButton'\nimport PlayerHand from './components/PlayerHand'\nimport ResultDisplay from './components/ResultDisplay'\n\nimport './App.css';\n\n// bringing in an external module that will hold our API calls. \nconst API = require('./utils')\n\nclass App extends Component {\n  // set some initial values for state. \n  state = {\n    myThrow: \"\",\n    lambda: \"\",\n    result: \"\"\n  }\n\n  // makes a call to my own AWS API endpoint and should return a JSON object telling me if I won or lost\n  playLambdaRPS = (myChoice) => {\n    // set my value to the local state\n    this.setState({\n      myThrow : myChoice,\n      lambda : \"\",\n      result : \"\"\n    })\n\n    // make the call to the AWS lambda function with my choice\n    API.playRPS(myChoice)\n    .then(response => {\n      // handle the response from the Lambda function. We're putting the response in state, since our component \n      //  will react to the data in state and update the appropriate values in our app. \n      this.setState({\n        lambda : response.data.lambda,\n        result : response.data.result\n      })\n    })\n  }\n\n  // OUR JSX is down here...\n  render() {\n    return (\n      <div className=\"App\">\n        <header className='App-header'>\n          <h1 className='display-3'>Nate's AWS Lambda RPS Game</h1>\n        </header>\n\n        <div className='App-main'>\n          <div className = 'container'>\n            <div className='row justify-content-center'>\n              <MyButton\n                playLambdaRPS={this.playLambdaRPS}\n                choice=\"rock\" />\n              <MyButton\n                playLambdaRPS={this.playLambdaRPS}\n                choice=\"paper\" />\n              <MyButton\n                playLambdaRPS={this.playLambdaRPS}\n                choice=\"scissors\" />\n            </div>\n\n            {/* RPS response area */}\n            <div className='row justify-content-center'>\n              <div className=\"col-4\">\n              <PlayerHand \n                  thePlayer=\"MY\"\n                  theChoice={this.state.myThrow}\n                />\n              <PlayerHand \n                thePlayer=\"LAMBDA\"\n                theChoice={this.state.lambda}\n              />\n              <ResultDisplay\n                theResult={this.state.result}\n              />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}